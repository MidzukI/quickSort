/**
\file one.cpp 
*/

/**
\fn int main() 
*/

/**
\fn void rapidSort() 
*/

#include <iostream>
using namespace std;

void rapidSort(int M[], int min, int max) ///Функция быстрой сортировки.Входные данные: целочисленный массив,над которым проводится сортировка,номера минимального и максимального членов данного массива.
{
	int i = min;   ///   Объявление переменных,отвечающих за номера членов массива          
	int j = max;
	int x = M[(min+max)/2];  ///Задача некоторой медианы-опорного эоемента для процесса сортировки

	while(i < j)
	{ 
		while(M[j] > x) --j; ///"Откидывание" элементов массива влево(в младшую часть)
		while(M[i] < x) ++i; ///"Откидывание" элементов массива вправо(в старшую часть)

		if(i <= j) ///"Обмен" элементов местами
		{           
			int temp = M[i];
			M[i] = M[j];
			M[j] = temp;

			i++; j--; ///переход к следующей паре элементов
		}

	};/// если значения границ не совпадают с введенными параметрами, то вызывается функция со значениями границ в качестве параметров и частично обработанным массивом. 

	if(min < j) rapidSort(M, min, j);

	if(i < max) rapidSort(M, i, max);
}

int main( )
{
	int Mas[5]={6,5,4,3,2}; ///Задание некоторого массива с неотсортированными элементами

	rapidSort(Mas,0,4); ///Сортировка заданного массива

	for(int n=0;n<4;n++)///Вывод элементов массива от нулевого до последнего
	{
		cout<<Mas[n]<<endl;
	}
	return 0;
}